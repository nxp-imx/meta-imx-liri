From cde674c066cadd2d660a7d42a1045519dfe9cfd0 Mon Sep 17 00:00:00 2001
From: Neena Busireddy <neenareddy.busireddy@nxp.com>
Date: Mon, 27 Aug 2018 13:32:39 -0500
Subject: [PATCH] Fix build with Qt 5.10

This patch is based on
https://github.com/lirios/wayland/commit/a16c09351cd50f47b92af43b58596ede60f620ff

Signed-off-by: Neena Busireddy <neenareddy.busireddy@nxp.com>
---
 src/platform/deviceintegration/eglfswindow.cpp |  4 ++
 src/platform/libinput/libinputgesture.cpp      | 85 +++++++++++++++++++-------
 2 files changed, 66 insertions(+), 23 deletions(-)

diff --git a/src/platform/deviceintegration/eglfswindow.cpp b/src/platform/deviceintegration/eglfswindow.cpp
index 95d8754..36d2d57 100644
--- a/src/platform/deviceintegration/eglfswindow.cpp
+++ b/src/platform/deviceintegration/eglfswindow.cpp
@@ -237,7 +237,11 @@ void EglFSWindow::setGeometry(const QRect &r)
 
     // if we corrected the size, trigger a resize event
     if (rect != r)
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
+        QWindowSystemInterface::handleGeometryChange(window(), r);
+#else
         QWindowSystemInterface::handleGeometryChange(window(), rect, r);
+#endif
 }
 
 QRect EglFSWindow::geometry() const
diff --git a/src/platform/libinput/libinputgesture.cpp b/src/platform/libinput/libinputgesture.cpp
index 2bbbfbc..7121d27 100644
--- a/src/platform/libinput/libinputgesture.cpp
+++ b/src/platform/libinput/libinputgesture.cpp
@@ -6,21 +6,20 @@
  * Author(s):
  *    Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
  *
- * $BEGIN_LICENSE:LGPL$
+ * $BEGIN_LICENSE:LGPLv3+$
  *
- * This file may be used under the terms of the GNU Lesser General Public
- * License version 2.1 or later as published by the Free Software Foundation
- * and appearing in the file LICENSE.LGPLv21 included in the packaging of
- * this file.  Please review the following information to ensure the
- * GNU Lesser General Public License version 2.1 requirements will be
- * met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
  *
- * Alternatively, this file may be used under the terms of the GNU General
- * Public License version 2.0 or later as published by the Free Software
- * Foundation and appearing in the file LICENSE.GPLv2 included in the
- * packaging of this file.  Please review the following information to ensure
- * the GNU General Public License version 2.0 requirements will be
- * met: http://www.gnu.org/licenses/gpl-2.0.html.
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  * $END_LICENSE$
  ***************************************************************************/
@@ -28,8 +27,8 @@
 #include <QtCore/QPointF>
 #include <QtGui/qpa/qwindowsysteminterface.h>
 
-#include "libinput/libinputhandler.h"
-#include "libinput/libinputgesture.h"
+#include "libinputhandler.h"
+#include "libinputgesture.h"
 
 #include <libinput.h>
 
@@ -47,9 +46,15 @@ void LibInputGesture::handlePinchBegin(libinput_event_gesture *event)
     const quint64 timestamp = libinput_event_gesture_get_time_usec(event);
     QPointF pos(0, 0);
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
+    QWindowSystemInterface::handleGestureEvent(
+                nullptr, nullptr, timestamp, Qt::BeginNativeGesture,
+                pos, pos);
+#else
     QWindowSystemInterface::handleGestureEvent(
-                Q_NULLPTR, timestamp, Qt::BeginNativeGesture,
+                nullptr, timestamp, Qt::BeginNativeGesture,
                 pos, pos);
+#endif
 }
 
 void LibInputGesture::handlePinchEnd(libinput_event_gesture *event)
@@ -57,9 +62,15 @@ void LibInputGesture::handlePinchEnd(libinput_event_gesture *event)
     const quint64 timestamp = libinput_event_gesture_get_time_usec(event);
     QPointF pos(0, 0);
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
+    QWindowSystemInterface::handleGestureEvent(
+                nullptr, nullptr, timestamp, Qt::EndNativeGesture,
+                pos, pos);
+#else
     QWindowSystemInterface::handleGestureEvent(
-                Q_NULLPTR, timestamp, Qt::EndNativeGesture,
+                nullptr, timestamp, Qt::EndNativeGesture,
                 pos, pos);
+#endif
 }
 
 void LibInputGesture::handlePinchUpdate(libinput_event_gesture *event)
@@ -70,13 +81,23 @@ void LibInputGesture::handlePinchUpdate(libinput_event_gesture *event)
     QPointF pos(libinput_event_gesture_get_dx(event),
                 libinput_event_gesture_get_dy(event));
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
     QWindowSystemInterface::handleGestureEventWithRealValue(
-                Q_NULLPTR, timestamp, Qt::ZoomNativeGesture,
+                nullptr, nullptr, timestamp, Qt::ZoomNativeGesture,
                 scale, pos, pos);
-    if (angle != 0)
+    if (angle != 0.0)
         QWindowSystemInterface::handleGestureEventWithRealValue(
-                    Q_NULLPTR, timestamp, Qt::RotateNativeGesture,
+                    nullptr, nullptr, timestamp, Qt::RotateNativeGesture,
                     angle, pos, pos);
+#else
+    QWindowSystemInterface::handleGestureEventWithRealValue(
+                nullptr, timestamp, Qt::ZoomNativeGesture,
+                scale, pos, pos);
+    if (angle != 0.0)
+        QWindowSystemInterface::handleGestureEventWithRealValue(
+                    nullptr, timestamp, Qt::RotateNativeGesture,
+                    angle, pos, pos);
+#endif
 }
 
 void LibInputGesture::handleSwipeBegin(libinput_event_gesture *event)
@@ -84,9 +105,15 @@ void LibInputGesture::handleSwipeBegin(libinput_event_gesture *event)
     const quint64 timestamp = libinput_event_gesture_get_time_usec(event);
     QPointF pos(0, 0);
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
+    QWindowSystemInterface::handleGestureEvent(
+                nullptr, nullptr, timestamp, Qt::BeginNativeGesture,
+                pos, pos);
+#else
     QWindowSystemInterface::handleGestureEvent(
-                Q_NULLPTR, timestamp, Qt::BeginNativeGesture,
+                nullptr, timestamp, Qt::BeginNativeGesture,
                 pos, pos);
+#endif
 }
 
 void LibInputGesture::handleSwipeEnd(libinput_event_gesture *event)
@@ -94,9 +121,15 @@ void LibInputGesture::handleSwipeEnd(libinput_event_gesture *event)
     const quint64 timestamp = libinput_event_gesture_get_time_usec(event);
     QPointF pos(0, 0);
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
     QWindowSystemInterface::handleGestureEvent(
-                Q_NULLPTR, timestamp, Qt::EndNativeGesture,
+                nullptr, nullptr, timestamp, Qt::EndNativeGesture,
                 pos, pos);
+#else
+    QWindowSystemInterface::handleGestureEvent(
+                nullptr, timestamp, Qt::EndNativeGesture,
+                pos, pos);
+#endif
 }
 
 void LibInputGesture::handleSwipeUpdate(libinput_event_gesture *event)
@@ -105,9 +138,15 @@ void LibInputGesture::handleSwipeUpdate(libinput_event_gesture *event)
     QPointF pos(libinput_event_gesture_get_dx(event),
                 libinput_event_gesture_get_dy(event));
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
+    QWindowSystemInterface::handleGestureEvent(
+                nullptr, nullptr, timestamp, Qt::SwipeNativeGesture,
+                pos, pos);
+#else
     QWindowSystemInterface::handleGestureEvent(
-                Q_NULLPTR, timestamp, Qt::SwipeNativeGesture,
+                nullptr, timestamp, Qt::SwipeNativeGesture,
                 pos, pos);
+#endif
 }
 
 } // namespace Platform
-- 
2.7.4

